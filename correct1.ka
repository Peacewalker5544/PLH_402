--Making a comp and testing it.
comp Circle:

	#x, #y: scalar;
	#radius: scalar;

	def area() -> scalar: 
		return 3.14 * (#radius ** 2);
	enddef;

	def perimeter() -> scalar: 
		return 2 * 3.14 * #radius; 
	enddef;

	def move(dx: scalar, dy:scalar): 
		#x = #x + dx; 
		#y = #y + dy; 
	enddef;

	def setCircle(x: scalar, y: scalar, r: scalar):
		#x = x;
		#y = y;
		#radius = r;
	enddef;

endcomp; 

--A dummy comp ignore.
comp Circle2:
	#x, #y: scalar;
	#radius: scalar;
endcomp; 

def createCircle(x: scalar, y: scalar, r: scalar) -> Circle :
  c: Circle;
  c.setCircle(x,y,r);
  return c;
enddef;

def main():

	aCircle: Circle;
	x,y: scalar;

	x = 0;
	y = 0;

	aCircle = createCircle(x,y,1);

	write("Circle location: (%f,%f)\n", aCircle.#x, aCircle.#y);
	write("Circle area: %f\n", aCircle.area());
	write("Circle perimeter: %f\n", aCircle.perimeter());

	--Moving the circle

	x = 1;
	y = 4;

	write("\n");

	aCircle.move(x, y);

	write("Moved Circle location: (%f,%f)\n", aCircle.#x, aCircle.#y);
	write("Moved Circle area: %f\n", aCircle.area());
	write("Moved Circle perimeter: %f\n", aCircle.perimeter());

	--Resing the circle

	write("\n");

	aCircle.#radius = 2;

	write("Resized Circle location: (%f,%f)\n", aCircle.#x, aCircle.#y);
	write("Resized Circle area: %f\n", aCircle.area());
	write("Resized Circle perimeter: %f\n", aCircle.perimeter());

enddef;